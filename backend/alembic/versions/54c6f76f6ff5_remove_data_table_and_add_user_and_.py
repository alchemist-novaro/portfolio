"""remove data table and add user and profile tables

Revision ID: 54c6f76f6ff5
Revises: 88c567b9d8a9
Create Date: 2025-09-02 19:57:10.571077

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM

# revision identifiers, used by Alembic.
revision: str = '54c6f76f6ff5'
down_revision: Union[str, Sequence[str], None] = '88c567b9d8a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    user_role_enum = ENUM('ADMIN', 'USER', name='userrole', create_type=False)
    user_tier_enum = ENUM('FREE', 'PRO', 'PRO_PLUS', name='usertier', create_type=False)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', user_role_enum, nullable=False),
    sa.Column('tier', user_tier_enum, nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('usage_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_id'),
    sa.UniqueConstraint('usage_id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.drop_index(op.f('ix_datas_domain'), table_name='datas')
    op.drop_table('datas')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datas',
    sa.Column('domain', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('icon', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('github', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('linkedin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('twitter', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('instagram', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('facebook', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('whatsapp', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('discord', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telegram', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('avatar', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('domain', name=op.f('datas_pkey'))
    )
    op.create_index(op.f('ix_datas_domain'), 'datas', ['domain'], unique=True)
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
